ES5: Callback (gọi lại)
	- Khái niệm: nó là hàm được truyền qua đối số khi gọi một hàm khác hoặc hiểu theo một cách khác là khi thoả mãn hai điều kiện:
		+ Là hàm
		+ Được truyền qua đối số
		+ Được gọi lại trong hàm nhận đối số
	  => Là callback
	- Ví dụ:
		function a(param){
			if(typeof param == 'function'){
				param('Hello World'); //Khi đối số truyền vào không phải là function sẽ bị lỗi param is not a function
			}
			else{
				console.log(param);
			}
		}
		function b(value){
			console.log("Value: ", value);
		}
		a(b);
	- Khi callback thì hàm nhận đối số sẽ thực hiện trước sau đó mới hàm truyền vào sẽ thực hiện sau khi biến truyền vào được gọi
	
ES6: Promise
	- Khi nào cần sử dụng: được sử dụng khi xảy ra trường hợp callback hell (pyramid of doom) hoặc sử dụng cho việc hiển thị kết quả thành công hoặc bắt lỗi
	- Khái niệm: là một đối tượng sẽ trả về một giá trị trong tương lai.

Chú thích:
	- callback hell: là một cách code không tối ưu, hàm lồng hàm và nhiều hàm lồng nhau, ví dụ:
		function a(param){
			param();
		}
		function b(param){
			param();
		}
		function c(param){
			param();
		}
		function main(){
			a(function(){
				b(function(){
					c(function(){
						console.log("Ối giời ơi !!");
					});
				});
			});
		}